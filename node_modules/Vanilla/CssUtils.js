import fs from "fs";

export function BuildFonts(path, savePath) {
    var css = "";
    var fonts = fs.readdirSync(path);

    // Change file names to remove spaces and get updated file list
    for (var i = 0; i < fonts.length; i++) {
        var font = fonts[i];
        var fontName = font.split(".")[0];
        const extension = font.split(".")[1];
        if (font.includes(" ")) {
            fs.renameSync(path + "/" + font, path + "/" + fontName.replace(/ /g, "") + "." + extension);
            font = fontName.replace(/ /g, "") + "." + extension;
            fonts[i] = font;
        }
    }

    const longestFontName = fonts.reduce((max, font) => Math.max(max, font.length), 0);

    for (const font of fonts) {
        var fontName = `"${font.split(".")[0]}"`.padEnd(longestFontName, " ");
        css += `@font-face {font-family: ${fontName};src: url("/Frontend/Assets/Fonts/${font}");}\n`;
    }
    fs.writeFileSync(savePath, css);
    return css;
}

